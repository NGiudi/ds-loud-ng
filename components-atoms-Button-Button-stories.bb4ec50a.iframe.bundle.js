(self.webpackChunkds_loud_ng=self.webpackChunkds_loud_ng||[]).push([[200],{"./node_modules/@storybook/blocks/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/blocks/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/@storybook/core/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/core/dist/theming sync recursive",module.exports=webpackEmptyContext},"./src/components/atoms/Button/Button.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AllTypes:()=>AllTypes,Model:()=>Model,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});__webpack_require__("./node_modules/react/index.js");var dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),src=__webpack_require__("./src/index.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ButtonDocs=()=>(0,jsx_runtime.jsx)(dist.di,{children:(0,jsx_runtime.jsxs)(src.VN,{children:[(0,jsx_runtime.jsx)(src.EY,{margin:"b-16",type:"pageTitle",children:"Button"}),(0,jsx_runtime.jsx)(src.EY,{children:"El componente Button es un elemento fundamental en nuestro sistema de diseño que proporciona una forma consistente y atractiva de interactuar con nuestra interfaz de usuario. Diseñado para mejorar la usabilidad y la coherencia visual en todas nuestras aplicaciones y plataformas, el botón es versátil y adaptable, adecuado para una variedad de contextos y acciones."}),(0,jsx_runtime.jsx)(dist.Hl,{}),(0,jsx_runtime.jsx)(src.EY,{margin:"b-16",type:"title",children:"Características"}),(0,jsx_runtime.jsxs)(src.EY,{margin:"b-16",children:[(0,jsx_runtime.jsxs)(src.EY,{as:"span",weight:"semibold",children:["Estilos Variados:"," "]}),"Nuestro sistema de diseño ofrece una gama de estilos de botones que se pueden adaptar a diferentes necesidades. Esto incluye botones de acción primaria, secundaria y terciaria."]}),(0,jsx_runtime.jsxs)(src.EY,{margin:"b-16",children:[(0,jsx_runtime.jsxs)(src.EY,{as:"span",weight:"semibold",children:["Iconografía Integrada:"," "]}),"Los botones pueden contener iconos junto con el texto, lo que permite una comunicación visual rápida y efectiva. Nuestro sistema proporciona una biblioteca de iconos estándar para facilitar su integración."]}),(0,jsx_runtime.jsxs)(src.EY,{margin:"b-16",children:[(0,jsx_runtime.jsxs)(src.EY,{as:"span",weight:"semibold",children:["Estados Interactivos:"," "]}),"Los botones están diseñados para responder a diferentes estados interactivos, incluyendo estado normal, estado de hover (cursor sobre el botón) y estado de clic, con efectos de transición suaves y cambios visuales sutiles."]}),(0,jsx_runtime.jsxs)(src.EY,{margin:"b-40",children:[(0,jsx_runtime.jsxs)(src.EY,{as:"span",weight:"semibold",children:["Accesibilidad y Responsividad:"," "]}),"Nos preocupamos por la accesibilidad y la responsividad, por lo que nuestros botones están diseñados para cumplir con algunas pautas de accesibilidad web."]}),(0,jsx_runtime.jsx)(src.EY,{type:"title",children:"Propiedades"}),(0,jsx_runtime.jsx)(dist.H2,{})]})});ButtonDocs.__docgenInfo={description:"",methods:[],displayName:"ButtonDocs"};const meta={argTypes:{border:{control:{type:"object"},description:"Este objeto define los estilos aplicados al borde del botón"},children:{control:{type:"object"},description:"Texto del contenido del botón"},disabled:{control:{type:"boolean"},description:"Cuando se establece en true, el botón queda deshabilitado"},fullWidth:{control:{type:"boolean"},description:"Cuando se establece en true, el botón ocupa todo el ancho del contenedor padre"},icon:{control:{type:"object"},description:"Este objeto se pasa al componente Icon dentro del botón"},id:{control:{type:"text"},description:"Identificador único para el componente"},kind:{control:{type:"select"},description:"Recibe el nombre del tipo de botón",options:["outlined","solid","text"]},loading:{control:{type:"boolean"},description:"Cuando se establece en true, se muestra un spinner de carga"},margin:{control:{type:"text"},description:"Establece la distancia de los márgenes"},onClick:{action:"clicked",description:"Esta función se ejecuta al presionar el botón. Sin embargo, si el botón está en modo de carga, la función no se ejecuta"},type:{control:{type:"select"},description:"Establece si el botón actua como un botón submit o no.",options:["button","submit"]}},component:src.$n,parameters:{docs:{page:ButtonDocs},status:{type:"stable"}},tags:["autodocs"],title:"Components/Button"},cellSize={height:"50px",textAlign:"start",width:"120px"},Model=args=>(0,jsx_runtime.jsx)(src.VN,{children:(0,jsx_runtime.jsx)(src.$n,{...args})});Model.args={border:{radius:"4px"},children:"Apretame",disabled:!1,fullWidth:!1,icon:{icon:"award"},id:"button-story",kind:"solid",loading:!1,margin:"a-0",onCkick:null,type:"button"};const AllTypes=()=>(0,jsx_runtime.jsx)(src.VN,{children:(0,jsx_runtime.jsxs)("table",{children:[(0,jsx_runtime.jsx)("thead",{children:(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{style:cellSize,children:"Defualt"}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:"With icon"}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:"Loading"}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:"Disabled"})]})}),(0,jsx_runtime.jsxs)("tbody",{children:[(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{icon:{icon:"cog"},onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{loading:!0,onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{disabled:!0,onClick:()=>{},children:"Button"})})]}),(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{kind:"outlined",onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{icon:{icon:"cog"},kind:"outlined",onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{kind:"outlined",loading:!0,onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{disabled:!0,kind:"outlined",onClick:()=>{},children:"Button"})})]}),(0,jsx_runtime.jsxs)("tr",{children:[(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{kind:"text",onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{icon:{icon:"cog"},kind:"text",onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{kind:"text",loading:!0,onClick:()=>{},children:"Button"})}),(0,jsx_runtime.jsx)("th",{style:cellSize,children:(0,jsx_runtime.jsx)(src.$n,{disabled:!0,kind:"text",onClick:()=>{},children:"Button"})})]})]})]})}),Button_stories=meta,__namedExportsOrder=["Model","AllTypes"];Model.parameters={...Model.parameters,docs:{...Model.parameters?.docs,source:{originalSource:"args => {\n  return <ThemeDS>\r\n      <Button {...args} />\r\n    </ThemeDS>;\n}",...Model.parameters?.docs?.source}}},AllTypes.parameters={...AllTypes.parameters,docs:{...AllTypes.parameters?.docs,source:{originalSource:'() => {\n  return <ThemeDS>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th style={cellSize}>Defualt</th>\r\n            <th style={cellSize}>With icon</th>\r\n            <th style={cellSize}>Loading</th>\r\n            <th style={cellSize}>Disabled</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th style={cellSize}>\r\n              <Button onClick={() => {}}>Button</Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button icon={{\n              icon: "cog"\n            }} onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button loading onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button disabled onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n\r\n          <tr>\r\n            <th style={cellSize}>\r\n              <Button kind="outlined" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button icon={{\n              icon: "cog"\n            }} kind="outlined" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button kind="outlined" loading onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button disabled kind="outlined" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n\r\n          <tr>\r\n            <th style={cellSize}>\r\n              <Button kind="text" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button icon={{\n              icon: "cog"\n            }} kind="text" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button kind="text" loading onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n\r\n            <th style={cellSize}>\r\n              <Button disabled kind="text" onClick={() => {}}>\r\n                Button\r\n              </Button>\r\n            </th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </ThemeDS>;\n}',...AllTypes.parameters?.docs?.source}}}}}]);