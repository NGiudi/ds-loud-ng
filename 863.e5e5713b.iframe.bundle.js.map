{"version":3,"file":"863.e5e5713b.iframe.bundle.js","mappings":"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","sources":["webpack://ds-loud-ng/./src/components/atoms/Text/Text.styles.js","webpack://ds-loud-ng/./src/components/atoms/Badge/Badge.styles.js","webpack://ds-loud-ng/./src/components/atoms/Button/Button.styles.js","webpack://ds-loud-ng/./src/components/atoms/Checkbox/Checkbox.styles.js","webpack://ds-loud-ng/./src/components/atoms/Divider/Divider.styles.js","webpack://ds-loud-ng/./src/components/atoms/Dropdown/components/DropdownItem/DropdownItem.styles.js","webpack://ds-loud-ng/./src/components/atoms/Dropdown/components/DropdownPanel/DropdownPanel.styles.js","webpack://ds-loud-ng/./src/components/atoms/Dropdown/components/DropdownToogle/DropdownToogle.styles.js","webpack://ds-loud-ng/./src/components/atoms/Icon/Icon.styles.js","webpack://ds-loud-ng/./src/components/atoms/IconButton/IconButton.styles.js","webpack://ds-loud-ng/./src/components/atoms/Image/components/ImagePlaceholder/ImagePlaceholder.styles.js","webpack://ds-loud-ng/./src/components/atoms/Image/Image.styles.js","webpack://ds-loud-ng/./src/components/atoms/Input/Input.styles.js","webpack://ds-loud-ng/./src/components/atoms/Modal/Modal.styles.js","webpack://ds-loud-ng/./src/components/atoms/Panel/Panel.styles.js","webpack://ds-loud-ng/./src/themes/icons/index.js","webpack://ds-loud-ng/./src/components/atoms/ProgressBar/ProgressBar.styles.js","webpack://ds-loud-ng/./src/components/atoms/Select/components/SelectContent/SelectContent.styles.js","webpack://ds-loud-ng/./src/components/atoms/Select/components/SelectOption/SelectOption.styles.js","webpack://ds-loud-ng/./src/components/atoms/Select/Select.styles.js","webpack://ds-loud-ng/./src/components/atoms/Table/components/DesktopTable/DesktopTable.styles.js","webpack://ds-loud-ng/./src/components/atoms/Table/components/PhoneTable/PhoneTable.styles.js","webpack://ds-loud-ng/./src/components/atoms/Tabs/Tabs.styles.js","webpack://ds-loud-ng/./src/components/atoms/TextArea/TextArea.styles.js","webpack://ds-loud-ng/./src/components/layout/Box/Box.styles.js","webpack://ds-loud-ng/./src/components/layout/Columns/Columns.styles.js","webpack://ds-loud-ng/./src/components/layout/Flex/Flex.styles.js","webpack://ds-loud-ng/./src/components/molecules/AppLayout/components/OfflineBadge/OfflineBadge.styles.js","webpack://ds-loud-ng/./src/components/molecules/AppLayout/components/ProfileAvatar/ProfileAvatar.styles.js","webpack://ds-loud-ng/./src/components/molecules/AppLayout/components/SideBar/SideBar.styles.js","webpack://ds-loud-ng/./src/components/molecules/AppLayout/AppLayout.styles.js","webpack://ds-loud-ng/./src/components/molecules/ImageGroup/ImageGroup.styles.jsx","webpack://ds-loud-ng/./src/components/molecules/Pagination/Pagination.styles.js","webpack://ds-loud-ng/./src/components/molecules/Pagination/utils/pages.js","webpack://ds-loud-ng/./src/components/molecules/StpesBar/StepsBar.styles.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nimport {\r\n  getColor,\r\n  marginProperties,\r\n  paddingProperties,\r\n} from \"../../../utils/styles\";\r\n\r\nconst textStyles = (props) => {\r\n  return css`\r\n    color: ${getColor(props.theme, props.$color)};\r\n    font-family: \"Source Sans 3\", sans-serif;\r\n    font-size: ${() => {\r\n      const { sizes, types } = props.theme.components.text;\r\n      return types[props.$type]?.size || sizes[props.$size];\r\n    }};\r\n    font-weight: ${() => {\r\n      const { weights, types } = props.theme.components.text;\r\n      return types[props.$type]?.weight || weights[props.$weight];\r\n    }};\r\n    line-height: ${() => {\r\n      const { lineHeights, types } = props.theme.components.text;\r\n      return types[props.$type]?.lineHeight || lineHeights[props.$size];\r\n    }};\r\n    text-align: ${props.$align};\r\n    text-decoration: ${props.$decoration};\r\n\r\n    ${marginProperties(props)}\r\n    ${paddingProperties(props)}\r\n  `;\r\n};\r\n\r\nconst TextWrapper = styled(\"p\")`\r\n  ${(props) => css`\r\n    ${textStyles(props)}\r\n  `}\r\n`;\r\n\r\nconst LabelWrapper = styled(\"label\")`\r\n  ${(props) => css`\r\n    display: inline-block;\r\n\r\n    ${textStyles(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  LabelWrapper,\r\n  TextWrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport {\r\n  getColor,\r\n  marginProperties,\r\n  paddingProperties,\r\n} from \"../../../utils/styles\";\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    display: inline-block;\r\n    background-color: ${getColor(props.theme, props.$color)};\r\n    border-radius: ${props.theme.components.badge.border.radius};\r\n\r\n    ${marginProperties(props)}\r\n    ${paddingProperties(props, props.theme.components.badge.padding)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  Wrapper,\r\n};\r\n","import styled, { css, keyframes } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\n//? loading animation\r\nconst rotate = keyframes`\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n`;\r\n\r\nconst ContentWrapper = styled(\"span\")`\r\n  ${(props) => `   \r\n    align-items: center;\r\n    display: flex;\r\n    visibility: ${props.$loading ? \"hidden\" : \"visible\"};\r\n  `}\r\n`;\r\n\r\nconst LoaderWrapper = styled(\"span\")`\r\n  ${(props) => css`\r\n    animation-name: ${rotate};\r\n    animation-duration: 1.5s;\r\n    animation-iteration-count: infinite;\r\n    animation-timing-function: ease-in-out;\r\n    display: ${props.$loading ? \"block\" : \"none\"};\r\n    left: calc(50% - 10px); /* TODO: 10px = half icon size */\r\n    position: absolute;\r\n    top: calc(50% - 10px); /* TODO: 10px = half icon size */\r\n  `}\r\n`;\r\n\r\nconst OutlinedButton = styled(\"button\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: transparent;\r\n    border: 1px solid ${props.theme.colors.orange._600};\r\n    border-radius: ${props.$border\r\n      ? props.$border.radius\r\n      : props.theme.components.button.outlined.borderRadius};\r\n    color: ${props.theme.colors.orange._600};\r\n    display: inline-flex;\r\n    height: ${props.theme.components.button.outlined.height};\r\n    justify-content: center;\r\n    padding: ${props.theme.components.button.outlined.padding};\r\n    position: relative;\r\n    width: ${props.$fullWidth ? \"100%\" : \"auto\"};\r\n\r\n    ${marginProperties(props)}\r\n\r\n    &:hover:enabled {\r\n      border-color: ${!props.$loading && props.theme.colors.orange._800};\r\n      color: ${!props.$loading && props.theme.colors.orange._800};\r\n    }\r\n\r\n    &:active:enabled {\r\n      border-color: ${!props.$loading && props.theme.colors.orange._900};\r\n      color: ${!props.$loading && props.theme.colors.orange._900};\r\n    }\r\n\r\n    &:disabled {\r\n      border-color: ${props.theme.colors.black._400};\r\n      box-shadow: none;\r\n      color: ${props.theme.colors.black._400};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst SolidButton = styled(\"button\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: ${props.theme.colors.orange._600};\r\n    border: none;\r\n    border-radius: ${props.$border\r\n      ? props.$border.radius\r\n      : props.theme.components.button.outlined.borderRadius};\r\n    box-shadow: ${props.theme.shadows.level1};\r\n    color: white;\r\n    display: inline-flex;\r\n    height: ${props.theme.components.button.solid.height};\r\n    justify-content: center;\r\n    padding: ${props.theme.components.button.solid.padding};\r\n    position: relative;\r\n    width: ${props.$fullWidth ? \"100%\" : \"auto\"};\r\n\r\n    ${marginProperties(props)}\r\n\r\n    &:hover:enabled {\r\n      background-color: ${!props.$loading && props.theme.colors.orange._800};\r\n      box-shadow: ${!props.$loading && props.theme.shadows.level2};\r\n    }\r\n\r\n    &:active:enabled {\r\n      background-color: ${!props.$loading && props.theme.colors.orange._900};\r\n      box-shadow: ${!props.$loading && props.theme.shadows.level3};\r\n    }\r\n\r\n    &:disabled {\r\n      background-color: ${props.theme.colors.black._400};\r\n      box-shadow: none;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst TextButton = styled(\"button\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: transparent;\r\n    border: none;\r\n    border-radius: ${props.$border\r\n      ? props.$border.radius\r\n      : props.theme.components.button.outlined.borderRadius};\r\n    display: inline-flex;\r\n    height: ${props.theme.components.button.solid.height};\r\n    justify-content: center;\r\n    padding: ${props.theme.components.button.solid.padding};\r\n    position: relative;\r\n    width: ${props.$fullWidth ? \"100%\" : \"auto\"};\r\n\r\n    ${marginProperties(props)}\r\n\r\n    &:hover:enabled {\r\n      background-color: ${!props.$loading && props.theme.colors.black._200};\r\n    }\r\n\r\n    &:active:enabled {\r\n      background-color: ${!props.$loading && props.theme.colors.black._300};\r\n    }\r\n\r\n    &:disabled {\r\n      box-shadow: none;\r\n      color: ${props.theme.colors.black._400};\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  ContentWrapper,\r\n  LoaderWrapper,\r\n  OutlinedButton,\r\n  SolidButton,\r\n  TextButton,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Field } from \"formik\";\r\n\r\nimport checkImage from \"../../../../public/images/check-mark.svg\";\r\n\r\nconst CustomCheckbox = styled(Field)`\r\n  ${(props) => `\r\n    appearance: none;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 60%;\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: ${props.theme.components.checkbox.check.border.radius};\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.checkbox.check.border.width};\r\n    box-sizing: border-box;\r\n    flex-shrink: 0;\r\n    height: ${props.theme.components.checkbox.check.width};\r\n    margin: ${props.theme.components.checkbox.check.margin};\r\n    width: ${props.theme.components.checkbox.check.width};\r\n\r\n    &:checked {\r\n      background-color: ${props.theme.colors.orange._500};\r\n      background-image: url(${checkImage});\r\n      border-color: ${props.theme.colors.orange._500};\r\n    }\r\n\r\n    &:hover&:checked {\r\n      background-color: ${props.theme.colors.orange._700};\r\n      border-color: ${props.theme.colors.orange._700};\r\n    }\r\n\r\n    &:hover&:not(:checked) {\r\n      border-color: ${props.theme.colors.black._700};\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  CustomCheckbox,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { getColor, marginProperties } from \"../../../utils/styles\";\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => `  \r\n    border: none;\r\n    background-color: ${getColor(props.theme, props.$color)};\r\n    height: ${props.height || props.theme.components.divider.height};\r\n\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const ItemWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    width: ${props.theme.components.dropdown.panelSize.width};\r\n\r\n    &:hover:not([disabled]) {\r\n      background-color: ${props.theme.colors.black._200};\r\n      overflow: hiddem;\r\n    }\r\n\r\n    &[disabled] {\r\n      cursor: not-allowed;\r\n      filter: opacity(50%);\r\n    }\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const TriangleWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    border-bottom: 10px solid transparent;\r\n    border-left: 10px solid ${props.theme.colors.alert.bgColors.neutral};\r\n    border-top: 10px solid transparent;\r\n    position: absolute;\r\n    top: -5px;\r\n    transform: rotate(-90deg);\r\n\r\n    ${props.direction === \"right\" && \"left: 10px;\"}\r\n    ${props.direction === \"left\" && \"right: 35px;\"}\r\n  `};\r\n`;\r\n\r\nexport const PanelWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    display: ${props.$showPanel ? \"block\" : \"none\"};\r\n    position: absolute;\r\n    top: 100%;\r\n    width: ${props.theme.components.dropdown.panelSize.width};\r\n\r\n    ${props.direction === \"right\" && \"left: 0;\"}\r\n    ${props.direction === \"left\" && \"right: 0;\"}\r\n  `};\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ToogleWrapper = styled(\"div\")`\r\n  display: inline-block;\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { getColor, marginProperties } from \"../../../utils/styles\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst IconItem = styled(FontAwesomeIcon)`\r\n  ${(props) => css`\r\n    font-size: ${props.theme.components.icon.iconSizes[props.$customsize]};\r\n    max-height: ${props.theme.components.icon.iconSizes[props.$customsize]};\r\n    max-widt: ${props.theme.components.icon.iconSizes[props.$customsize]};\r\n  `}\r\n`;\r\n\r\nconst IconWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    color: ${getColor(props.theme, props.$color)};\r\n    display: inline-flex;\r\n    height: ${props.theme.components.icon.wrapperSizes[props.size]};\r\n    justify-content: center;\r\n    width: ${props.theme.components.icon.wrapperSizes[props.size]};\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  IconItem,\r\n  IconWrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst IconButton = styled(\"button\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: transparent;\r\n    border: none;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    height: 38px;\r\n    justify-content: center;\r\n    width: 38px;\r\n\r\n    ${marginProperties(props)}\r\n\r\n    &:hover:enabled {\r\n      background-color: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &:active:enabled {\r\n      background-color: ${!props.loading && props.theme.colors.black._300};\r\n    }\r\n\r\n    &:disabled {\r\n      border-color: ${props.theme.colors.black._400};\r\n      box-shadow: none;\r\n      color: ${props.theme.colors.black._400};\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  IconButton,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../../../utils/styles\";\r\n\r\nconst IconPlaceholder = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: ${props.theme.colors.orange._600};\r\n    border-radius: ${props.$type === \"round\" ? \"50%\" : \"0\"};\r\n    display: inline-flex;\r\n    height: ${props.theme.components.image.height[props.$type][props.$size]}px;\r\n    justify-content: center;\r\n    width: ${props.theme.components.image.width[props.$type][props.$size]}px;\r\n\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  IconPlaceholder,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst ImageStyles = styled(\"img\")`\r\n  ${(props) => css`\r\n    border-radius: ${props.$type === \"round\" ? \"50%\" : \"0px\"};\r\n    display: block;\r\n    height: ${props.theme.components.image.height[props.$type][props.$size]}px;\r\n    object-fit: cover;\r\n    width: ${props.theme.components.image.width[props.$type][props.$size]}px;\r\n\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  ImageStyles,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { ErrorMessage, Field } from \"formik\";\r\n\r\nimport { marginProperties, paddingProperties } from \"../../../utils/styles\";\r\n\r\nconst Error = styled(ErrorMessage)`\r\n  ${(props) => css`\r\n    color: ${props.theme.colors.alert.colors.error};\r\n    font-size: ${props.theme.components.text.sizes.sm};\r\n    font-weight: ${props.theme.components.text.weights.regular};\r\n    line-height: ${props.theme.components.text.lineHeights.sm};\r\n  `};\r\n`;\r\n\r\nconst ErrorWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    height: ${props.theme.components.text.lineHeights.sm};\r\n\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nconst InputStyles = styled(Field)`\r\n  ${(props) => css`\r\n    background-color: transparent;\r\n    border: none;\r\n    flex-grow: 1;\r\n    font-size: ${props.theme.components.text.types.captionRegular.size};\r\n    font-weight: ${props.theme.components.text.types.captionRegular.weight};\r\n    height: ${props.theme.components.input.height};\r\n    line-height: ${props.theme.components.text.types.captionRegular.lineHeight};\r\n    outline: none;\r\n    padding: 0;\r\n  `};\r\n`;\r\n\r\nconst InputWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: ${props.theme.components.input.border.radius};\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.input.border.weight};\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    width: 100%;\r\n\r\n    ${marginProperties(props)}\r\n    ${paddingProperties(props, props.theme.components.input.padding)}\r\n  `};\r\n`;\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  Error,\r\n  ErrorWrapper,\r\n  InputStyles,\r\n  InputWrapper,\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { paddingProperties } from \"../../../utils/styles/spacing\";\r\n\r\nconst ButtonsWrapper = styled(\"div\")`\r\n  text-align: right;\r\n`;\r\n\r\nconst CloseBtnWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    position: absolute;\r\n    right: ${props.theme.components.modal.closeButton.position.right};\r\n    top: ${props.theme.components.modal.closeButton.position.top};\r\n  `}\r\n`;\r\n\r\nconst ContentBox = styled(\"div\")`\r\n  ${(props) => css`\r\n    padding: ${paddingProperties(props)};\r\n  `}\r\n`;\r\n\r\nconst Overlay = styled(\"div\")`\r\n  align-items: center;\r\n  backdrop-filter: blur(1px);\r\n  background-color: rgba(0, 0, 0, 0.35); //TODO: agregar color al theme.\r\n  display: flex;\r\n  height: 100vh;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst PanelWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    margin: auto;\r\n    max-width: ${props.width};\r\n    padding: ${paddingProperties(\r\n      props,\r\n      props.theme.components.modal.panel.padding,\r\n    )};\r\n    width: 100%;\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  ButtonsWrapper,\r\n  CloseBtnWrapper,\r\n  ContentBox,\r\n  Overlay,\r\n  PanelWrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties, paddingProperties } from \"../../../utils/styles\";\r\n\r\nconst ContentWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    flex-grow: 1;\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nconst PanelWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.alert.bgColors[props.type]};\r\n    border-radius: ${props.theme.components.panel.border.radius};\r\n    box-shadow: ${props.theme.shadows.level2};\r\n    color: ${props.theme.colors.alert.colors[props.type]};\r\n    display: flex;\r\n    position: relative;\r\n\r\n    ${marginProperties(props)}\r\n    ${paddingProperties(props, props.theme.components.panel.padding)}\r\n  \r\n    &::-webkit-scrollbar {\r\n      width: ${props.theme.components.panel.scroll.width};\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${props.theme.colors.black._300};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst PositionWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: ${props.$align};\r\n    display: flex;\r\n    flex-grow: 1;\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  ContentWrapper,\r\n  PanelWrapper,\r\n  PositionWrapper,\r\n};\r\n","import { fontawesome } from \"./icons\";\r\n\r\nexport const icons = {\r\n  fontawesome,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst BarWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.orange._600};\r\n    height: ${props.size &&\r\n    props.theme.components.progressBar.height[props.size]};\r\n    width: ${props.$porcent ? props.$porcent : \"0%\"};\r\n  `}\r\n`;\r\n\r\nconst ProgressBarWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.black._300};\r\n    border-radius: ${props.$borderRound &&\r\n    props.theme.components.progressBar.border.radius[props.size]};\r\n    overflow: hidden;\r\n    width: 100%;\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  BarWrapper,\r\n  ProgressBarWrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst SelectPanel = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.black._100};\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: ${props.theme.components.select.border.radius};\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.select.border.width};\r\n    box-sizing: border-box;\r\n    margin-top: ${props.theme.components.select.panel.margin.top};\r\n    max-height: ${props.$maxHeight};\r\n    overflow: auto;\r\n    padding: ${props.theme.components.select.panel.padding};\r\n    position: absolute;\r\n    top: ${props.theme.components.select.height};\r\n    z-index: 50;\r\n    width: 100%;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: ${props.theme.components.select.scroll.width};\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${props.theme.colors.black._300};\r\n    }\r\n  `};\r\n`;\r\n\r\nconst SelectedOption = styled(\"div\")`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst SelectedOptionWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: ${props.theme.colors.black._100};\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: ${props.theme.components.select.border.radius};\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.select.border.width};\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    height: ${props.theme.components.select.height};\r\n    opacity: ${props.disabled && \"0.5\"};\r\n    width: 100%;\r\n  `};\r\n`;\r\n\r\nconst SelectWrapper = styled(\"div\")`\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Styles = {\r\n  SelectPanel,\r\n  SelectedOption,\r\n  SelectedOptionWrapper,\r\n  SelectWrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst SelectOption = styled(\"div\")`\r\n  ${(props) => css`\r\n    cursor: pointer;\r\n    padding: 4px 8px;\r\n\r\n    &:hover {\r\n      background-color: ${props.theme.colors.black._200};\r\n    }\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  SelectOption,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    ${marginProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  Wrapper,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../../../utils/styles\";\r\n\r\nconst Column = styled(\"div\")`\r\n  ${(props) => `\r\n    width: ${props.width};\r\n  `}\r\n`;\r\n\r\nconst Row = styled(\"div\")`\r\n  ${(props) => `\r\n    align-items: center;\r\n    border-bottom-color: ${props.theme.colors.black._400};\r\n    border-bottom-style: solid;\r\n    border-bottom-width: ${props.theme.components.table.row.borderBottom.width};\r\n    box-sizing: border-box;\r\n    cursor: ${!props.$isHeader ? \"pointer\" : \"default\"};\r\n    display: flex;\r\n    padding: ${props.theme.components.table.row.padding};\r\n    width: 100%;\r\n\r\n    &:hover {\r\n      background-color: ${\r\n        !props.$isHeader ? props.theme.colors.black._200 : \"transparent\"\r\n      };\r\n    }\r\n\r\n    &:hover&:active {\r\n      background-color: ${\r\n        !props.$isHeader ? props.theme.colors.black._300 : \"transparent\"\r\n      };\r\n    }\r\n  `}\r\n`;\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => `\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  Column,\r\n  Row,\r\n  Wrapper,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../../../utils/styles\";\r\n\r\nconst Column = styled(\"div\")`\r\n  ${(props) => `\r\n    display: ${props.mobile?.inline ? \"inline-block\" : \"block\"};\r\n    width: ${props.mobile?.width ? props.mobile.width : \"100%\"};\r\n  `};\r\n`;\r\n\r\nconst Row = styled(\"div\")`\r\n  ${(props) => `\r\n    border-bottom-color: ${props.theme.colors.black._400};\r\n    border-bottom-style: solid;\r\n    border-bottom-width: ${props.theme.components.table.row.borderBottom.width};\r\n    box-sizing: content-box;\r\n    padding: ${props.theme.components.table.row.padding};\r\n\r\n    &:hover {\r\n      background-color: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &:hover&:active {\r\n      background-color: ${props.theme.colors.black._300};\r\n    }\r\n  `};\r\n`;\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => `\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  Column,\r\n  Row,\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties, paddingProperties } from \"../../../utils/styles\";\r\n\r\nconst TabsBar = styled(\"div\")`\r\n  ${(props) => css`\r\n    border-bottom-color: ${props.theme.colors.black._200};\r\n    border-bottom-style: solid;\r\n    border-bottom-width: ${props.theme.components.tabs.bar.border.width};\r\n\r\n    ${paddingProperties(props, props.theme.components.tabs.bar.padding)}\r\n  `};\r\n`;\r\n\r\nconst TabButton = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: transparent;\r\n    border: none;\r\n    border-bottom-color: ${props.$isSelected\r\n      ? props.theme.colors.orange._600\r\n      : \"transparent\"};\r\n    border-bottom-style: solid;\r\n    border-bottom-width: ${props.theme.components.tabs.button.border.width};\r\n\r\n    ${paddingProperties(props, props.theme.components.tabs.button.padding)}\r\n\r\n    &:hover {\r\n      border-bottom-color: ${props.theme.colors.orange._300};\r\n    }\r\n  `};\r\n`;\r\n\r\nconst TabContent = styled(\"div\")`\r\n  ${(props) => css`\r\n    ${paddingProperties(props, props.theme.components.tabs.content.padding)}\r\n  `};\r\n`;\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    ${marginProperties(props)}\r\n    ${paddingProperties(props)}\r\n  `};\r\n`;\r\n\r\nexport const Styles = {\r\n  TabsBar,\r\n  TabButton,\r\n  TabContent,\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { Field } from \"formik\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst TextArea = styled(Field)`\r\n  ${(props) => css`\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: ${props.theme.components.textArea.border.radius};\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.textArea.border.width};\r\n    box-sizing: border-box;\r\n    padding: ${props.theme.components.textArea.padding};\r\n    resize: none;\r\n    width: 100%;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: ${props.theme.components.panel.scroll.width};\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${props.theme.colors.black._300};\r\n    }\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  TextArea,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles/spacing\";\r\n\r\nexport const Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles/spacing\";\r\n\r\nexport const Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    display: grid;\r\n    grid-template-columns: repeat(${props.children.length}, 1fr);\r\n    grid-column-gap: ${props.$gap};\r\n    grid-row-gap: ${props.$gap};\r\n\r\n    ${marginProperties(props)}\r\n\r\n    @media only screen and (max-width: ${props.$minWidth}) {\r\n      grid-template-columns: repeat(1, 1fr);\r\n    }\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: ${props.$vAlign};\r\n    display: flex;\r\n    flex-direction: ${props.$direction};\r\n    justify-content: ${props.$hAlign};\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { paddingProperties } from \"../../../../../utils/styles\";\r\n\r\nexport const Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: ${props.theme.colors.alert.bgColors.warning};\r\n    border-radius: 0 0 5px 5px;\r\n    box-shadow: ${props.theme.shadows.level2};\r\n    color: ${props.theme.colors.alert.colors.warning};\r\n    display: flex;\r\n    left: 50%;\r\n    position: absolute;\r\n    top: 100%;\r\n\r\n    ${paddingProperties(props, \"x-10 y-5\")}\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../../../utils/styles\";\r\n\r\nconst AvatarWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    border-color: ${props.$isSelected\r\n      ? `${props.theme.colors.black._500}`\r\n      : \"transparent\"};\r\n    border-radius: 50%;\r\n    border-style: solid;\r\n    border-width: ${props.theme.components.avatar.thickShadow};\r\n    display: inline-block;\r\n\r\n    &:hover {\r\n      border-color: ${!props.$isSelected && props.theme.colors.black._600};\r\n    }\r\n  `}\r\n`;\r\n\r\nconst PanelWrapper = styled(\"div\")`\r\n  margin-top: 8px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 100%;\r\n  width: 250px;\r\n`;\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: fit-content;\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  AvatarWrapper,\r\n  PanelWrapper,\r\n  Wrapper,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { paddingProperties } from \"../../../../../utils/styles\";\r\n\r\nconst BottomContentStyles = styled(\"div\")`\r\n  ${(props) => css`\r\n    border-top-color: ${props.theme.colors.black._200};\r\n    border-top-style: solid;\r\n    border-top-width: ${props.theme.components.appLayout.sidebar.border.width};\r\n\r\n    ${paddingProperties(\r\n      props,\r\n      props.theme.components.appLayout.sidebar.bottomContent.padding,\r\n    )}\r\n  `}\r\n`;\r\n\r\nconst SidebarButton = styled(\"button\")`\r\n  ${(props) => css`\r\n    background-color: transparent;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    position: relative;\r\n    width: ${props.$isExpanded\r\n      ? props.theme.components.appLayout.sidebar.width.expanded\r\n      : props.theme.components.appLayout.sidebar.width.contracted};\r\n\r\n    ${paddingProperties(\r\n      props,\r\n      props.theme.components.appLayout.sidebar.button.padding,\r\n    )}\r\n\r\n    &:hover {\r\n      background-color: ${props.theme.colors.black._200};\r\n    }\r\n    \r\n    /* this is the SidebarButtonTooltip */\r\n    &:hover div {\r\n      visibility: visible;\r\n    }\r\n  `}\r\n`;\r\n\r\nconst SidebarButtonTooltip = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.black._200};\r\n    border-color: ${props.theme.colors.black._400};\r\n    border-radius: 4px;\r\n    border-style: solid;\r\n    border-width: 1px;\r\n    left: calc(100% + 8px);\r\n    padding: 6px 8px;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(0, -50%);\r\n    visibility: hidden;\r\n  `}\r\n`;\r\n\r\nconst SidebarButtonsWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    height: calc(100% - ${props.theme.components.appLayout.sidebar.content.height});\r\n\r\n    &::-webkit-scrollbar {\r\n      width: ${props.theme.components.appLayout.scroll.width};\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${props.theme.colors.black._400};\r\n      border-radius: ${props.theme.components.appLayout.scroll.radious});\r\n    }\r\n  `}\r\n`;\r\n\r\nconst SidebarStyles = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.black._100};\r\n    border-right-color: ${props.theme.colors.black._200};\r\n    border-right-style: solid;\r\n    border-right-width: ${props.theme.components.appLayout.sidebar.border.width};\r\n    height: 100%;\r\n    position: relative;\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  BottomContentStyles,\r\n  SidebarButton,\r\n  SidebarButtonTooltip,\r\n  SidebarButtonsWrapper,\r\n  SidebarStyles,\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { paddingProperties } from \"../../../utils/styles\";\r\n\r\nexport const ContentBox = styled(\"div\")`\r\n  ${(props) => css`\r\n    background-color: ${props.theme.colors.black._100};\r\n    box-sizing: border-box;\r\n    flex-grow: 1;\r\n    height: 100%;\r\n    overflow: auto;\r\n    \r\n    ${paddingProperties(\r\n      props,\r\n      props.theme.components.appLayout.content.padding,\r\n    )}\r\n\r\n    &::-webkit-scrollbar {\r\n      width: ${props.theme.components.appLayout.scroll.width};\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n      background: ${props.theme.colors.black._200};\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: ${props.theme.colors.black._400};\r\n      border-radius: ${props.theme.components.appLayout.scroll.radious};\r\n    }\r\n  `}}\r\n`;\r\n\r\nexport const MainContent = styled(\"div\")`\r\n  ${(props) => css`\r\n    display: flex;\r\n    height: calc(100vh - ${props.theme.components.appLayout.topbar.height});\r\n    width: 100vw;\r\n  `}\r\n`;\r\n\r\nexport const TopBar = styled(\"div\")`\r\n  ${(props) => css`\r\n    box-sizing: border-box;\r\n    color: ${props.theme.colors.black._100};\r\n    background-color: ${props.theme.colors.black._700};\r\n    box-shadow: ${props.theme.shadows.level3};\r\n    height: ${props.theme.components.appLayout.topbar.height};\r\n    position: relative;\r\n    z-index: 100;\r\n    width: 100vw;\r\n\r\n    ${paddingProperties(props)}\r\n  `}\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst Wrapper = styled(\"div\")`\r\n  ${(props) => {\r\n    const halfSize = props.theme.components.image.width.round[props.$size] / 2;\r\n\r\n    return css`\r\n      height: ${props.theme.components.image.height.round[props.$size]}px;\r\n      display: inline-block;\r\n      position: relative;\r\n      width: ${halfSize * (props.$quantity + 1)}px;\r\n    `;\r\n  }}\r\n`;\r\n\r\nconst ImageItem = styled(\"img\")`\r\n  ${(props) => {\r\n    const halfSize = props.theme.components.image.width.round[props.$size] / 2;\r\n\r\n    return css`\r\n      border-radius: 50%;\r\n      height: ${props.theme.components.image.height.round[props.$size]}px;\r\n      left: ${props.$idx * halfSize}px;\r\n      object-fit: cover;\r\n      position: absolute;\r\n      top: 0;\r\n      width: ${props.theme.components.image.height.round[props.$size]}px;\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport const Styles = {\r\n  ImageItem,\r\n  Wrapper,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nexport const Wrapper = styled(\"div\")`\r\n  ${(props) => `\r\n    align-items: end;\r\n    display: flex;\r\n    justify-content: start;\r\n    \r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n\r\nexport const Styles = {\r\n  Wrapper,\r\n};\r\n","export const createPaginateList = (page, pages, nButtons) => {\r\n  let list = [];\r\n\r\n  if (pages <= nButtons) {\r\n    list = createPagesList(pages);\r\n  } else {\r\n    let cantRightButtons = pages - page;\r\n    let cantLeftButtons = page - 1;\r\n\r\n    if (cantLeftButtons > cantRightButtons) {\r\n      let maxNumberButton = Math.min(page + 4, page + cantRightButtons);\r\n      list = createPagesList(nButtons, maxNumberButton - nButtons + 1);\r\n    } else {\r\n      let minNumberButton = Math.max(page - 4, page - cantLeftButtons);\r\n      list = createPagesList(nButtons, minNumberButton);\r\n    }\r\n  }\r\n\r\n  if (list[0] !== 1) {\r\n    list[0] = 1;\r\n    list[1] = 0;\r\n  }\r\n\r\n  if (list[list.length - 1] !== pages) {\r\n    list[list.length - 2] = 0;\r\n    list[list.length - 1] = pages;\r\n  }\r\n\r\n  return list;\r\n};\r\n\r\nconst createPagesList = (cant, initValue = 1) => {\r\n  const list = [];\r\n\r\n  for (let i = 0; i < cant; i++) {\r\n    list.push(initValue + i);\r\n  }\r\n\r\n  return list;\r\n};\r\n","import styled, { css } from \"styled-components\";\r\n\r\nimport { marginProperties } from \"../../../utils/styles\";\r\n\r\nconst getColor = (theme, type) => {\r\n  switch (type) {\r\n    case \"pendingCircle\":\r\n      return theme.colors.black._300;\r\n    case \"checkedCircle\":\r\n    case \"circle\":\r\n    default:\r\n      return theme.colors.orange._600;\r\n  }\r\n};\r\n\r\nconst getBgColor = (theme, type) => {\r\n  switch (type) {\r\n    case \"pendingCircle\":\r\n      return theme.colors.black._300;\r\n    case \"circle\":\r\n      return \"none\";\r\n    case \"checkedCircle\":\r\n    default:\r\n      return theme.colors.orange._600;\r\n  }\r\n};\r\n\r\nexport const Circle = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    background-color: ${getBgColor(props.theme, props.type)};\r\n    border: 3px solid ${getColor(props.theme, props.type)};\r\n    border-radius: 50%;\r\n    color: ${props.theme.colors.black._100};\r\n    display: flex;\r\n    height: ${props.theme.components.stepsBar.circle.diameter[props.size]};\r\n    justify-content: center;\r\n    width: ${props.theme.components.stepsBar.circle.diameter[props.size]};\r\n  `}\r\n`;\r\n\r\nexport const ProgressBarWrapper = styled(\"div\")`\r\n  flex-grow: 1;\r\n  padding: 0px 10px;\r\n`;\r\n\r\nexport const StepsWrapper = styled(\"div\")`\r\n  ${(props) => css`\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    ${marginProperties(props)}\r\n  `}\r\n`;\r\n"],"names":[],"sourceRoot":""}